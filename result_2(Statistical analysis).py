{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "11d438db",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import math\n",
    "import matplotlib.pyplot as plt\n",
    "huizong1=np.loadtxt('E:/alpha_0.35/huizong_A_0.25')\n",
    "huizong2=np.loadtxt('E:/alpha_0.35/huizong_B_0.25')\n",
    "huizong=np.loadtxt('E:/alpha_0.35/huizong_0.25')\n",
    "\n",
    "average_1=[]\n",
    "average_2=[]\n",
    "for h in range(len(huizong1)):\n",
    "    average1= np.mean(huizong1[h])\n",
    "    average_1.append(average1)\n",
    "plt.scatter(np.arange(0,39.1,0.1),average_1,s=1, c = \"c\",label=\"Mean_rA\")\n",
    "\n",
    "for i in range(len(huizong2)):\n",
    "    average2= np.mean(huizong2[i])\n",
    "    average_2.append(average2)\n",
    "plt.scatter(np.arange(0,39.1,0.1),average_2,s=1, c = \"m\",label=\"Mean_rB\")\n",
    "\n",
    "\n",
    "plt.gca().set(xlabel='time', ylabel= 'average')\n",
    "plt.xticks(fontsize=12); plt.yticks(fontsize=12)\n",
    "\n",
    "Nt_breed1 = []\n",
    "for h in range(len(huizong)):\n",
    "    mean1= np.mean(huizong[h])\n",
    "    Nt_breed1.append(mean1)\n",
    "plt.scatter(np.arange(0,39.1,0.1),np.log(Nt_breed1),s=1, c = \"c\",label=\"Nt_breed\")\n",
    "plt.legend()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "724c0020",
   "metadata": {},
   "outputs": [],
   "source": [
    "n = 1\n",
    "ave_new = []\n",
    "time_new = []\n",
    "tt = []\n",
    "for i in range(0, len(average_1), n):\n",
    "    ave_1 = average_1[i:i + n]\n",
    "    ave_new.append(ave_1)\n",
    "for j in np.arange(0, 39.1, 0.1):\n",
    "    tt.append(j)\n",
    "for k in range(0, len(tt), n):\n",
    "    time_1 = tt[k:k + n]\n",
    "    time_new.append(time_1)\n",
    "var_1=[]\n",
    "var_2=[]\n",
    "Nt_var1 = []\n",
    "lambda1 = 0.4\n",
    "lambda2 = 0.2\n",
    "alpha = 0.35\n",
    "beta = 0.25\n",
    "for h in range(0,len(huizong1)):\n",
    "    average1= np.mean(huizong1[h])\n",
    "    var1= np.var(huizong1[h])\n",
    "    Nt_var_1 = ((2*lambda1*alpha-2*lambda2*beta+lambda2-lambda1)*average1-lambda2+2*lambda2*beta)/(2*(lambda2-lambda1)*var1)\n",
    "    Nt_var1.append(Nt_var_1)\n",
    "\n",
    "plt.scatter(np.arange(0.1,39.1,0.1),Nt_var1[1:],s=1, c = \"c\",label=\"Nt_var\")\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0c267e7b",
   "metadata": {},
   "outputs": [],
   "source": [
    "n = 1\n",
    "ave_new = []\n",
    "time_new = []\n",
    "tt = []\n",
    "for i in range(0, len(average_1), n):\n",
    "    ave_1 = average_1[i:i + n]\n",
    "    ave_new.append(ave_1)\n",
    "for j in np.arange(0, 39.1, 0.1):\n",
    "    tt.append(j)\n",
    "for k in range(0, len(tt), n):\n",
    "    time_1 = tt[k:k + n]\n",
    "    time_new.append(time_1)\n",
    "\n",
    "m = len(ave_new)\n",
    "Nt_mean1 = np.zeros(m)\n",
    "N0 = 100\n",
    "delta_t = 0.1*n\n",
    "sum_mt = []\n",
    "Nt_mean1[0] = N0\n",
    "for k in range(1, m):\n",
    "    mt_1 = []\n",
    "    mt_n = 0\n",
    "    for i in range(0, k):\n",
    "        mt_1.append((ave_new[i][0] + ave_new[i + 1][0]) / 2)\n",
    "    for g in range(0, len(mt_1)):\n",
    "        mt_n = mt_n + mt_1[g]\n",
    "    sum_mt.append(mt_n)\n",
    "    Nt_mean1[k] = N0*np.exp((lambda1-lambda2)*delta_t*sum_mt[-1]+lambda2*time_new[k][0])\n",
    "\n",
    "plt.plot(np.arange(0,39.1,0.1),Nt_mean1,c = \"r\",label = \"Nt_mean\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
